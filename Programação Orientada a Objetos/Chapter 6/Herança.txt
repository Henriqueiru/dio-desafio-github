Herança (derivada e classe base)
Em C#, é possível herdar campos e métodos de uma classe para outra. Agrupamos o "conceito de herança" em duas categorias:

Classe derivada (filho) - a classe que herda de outra classe
Classe Base (pai) - a classe que está sendo herdada
Para herdar de uma classe, use o :símbolo.

No exemplo abaixo, a Carclasse (filho) herda os campos e métodos da Vehicleclasse (pai):

Exemplo
class Vehicle  // base class (parent) 
{
  public string brand = "Ford";  // Vehicle field
  public void honk()             // Vehicle method 
  {                    
    Console.WriteLine("Tuut, tuut!");
  }
}

class Car : Vehicle  // derived class (child)
{
  public string modelName = "Mustang";  // Car field
}

class Program
{
  static void Main(string[] args)
  {
    // Create a myCar object
    Car myCar = new Car();

    // Call the honk() method (From the Vehicle class) on the myCar object
    myCar.honk();

    // Display the value of the brand field (from the Vehicle class) and the value of the modelName from the Car class
    Console.WriteLine(myCar.brand + " " + myCar.modelName);
  }
}
 

Por que e quando usar "herança"?
- É útil para reutilização de código: reutilize campos e métodos de uma classe existente ao criar uma nova classe.

Dica: Dê uma olhada também no próximo capítulo, Polimorfismo , que usa métodos herdados para realizar diferentes tarefas.

A palavra-chave selada
Se você não quiser que outras classes herdem de uma classe, use a sealedpalavra-chave:

Se você tentar acessar uma sealedclasse, C# irá gerar um erro:

sealed class Vehicle 
{
  ...
}

class Car : Vehicle 
{
  ...
}
A mensagem de erro será algo assim:

'Car': cannot derive from sealed type 'Vehicle'